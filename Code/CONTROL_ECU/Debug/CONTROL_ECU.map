Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              ./uart.o (__udivmodsi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

i                   0x1               ./main.o
IsRecorded          0x1               ./main.o
keyPressed          0x1               ./main.o
Decision            0x1               ./main.o
CONTROL_ECU_Password
                    0x6               ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
LOAD ./buzzer.o
LOAD ./dc_motor.o
LOAD ./eeprom.o
LOAD ./gpio.o
LOAD ./i2c.o
LOAD ./main.o
LOAD ./timer.o
LOAD ./uart.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x13b2
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./buzzer.o
 .text          0x00000092        0x0 ./dc_motor.o
 .text          0x00000092        0x0 ./eeprom.o
 .text          0x00000092        0x0 ./gpio.o
 .text          0x00000092        0x0 ./i2c.o
 .text          0x00000092        0x0 ./main.o
 .text          0x00000092        0x0 ./timer.o
 .text          0x00000092        0x0 ./uart.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.BUZZER_init
                0x00000092       0x22 ./buzzer.o
                0x00000092                BUZZER_init
 .text.BUZZER_on
                0x000000b4       0x18 ./buzzer.o
                0x000000b4                BUZZER_on
 .text.BUZZER_off
                0x000000cc       0x18 ./buzzer.o
                0x000000cc                BUZZER_off
 .text.DcMotor_Init
                0x000000e4       0x36 ./dc_motor.o
                0x000000e4                DcMotor_Init
 .text.DcMotor_Rotate
                0x0000011a       0x66 ./dc_motor.o
                0x0000011a                DcMotor_Rotate
 .text.EEPROM_init
                0x00000180       0x20 ./eeprom.o
                0x00000180                EEPROM_init
 .text.EEPROM_writeByte
                0x000001a0       0x82 ./eeprom.o
                0x000001a0                EEPROM_writeByte
 .text.EEPROM_readByte
                0x00000222       0xc0 ./eeprom.o
                0x00000222                EEPROM_readByte
 .text.GPIO_setupPinDirection
                0x000002e2      0x1d6 ./gpio.o
                0x000002e2                GPIO_setupPinDirection
 .text.GPIO_writePin
                0x000004b8      0x1d6 ./gpio.o
                0x000004b8                GPIO_writePin
 .text.GPIO_readPin
                0x0000068e      0x136 ./gpio.o
                0x0000068e                GPIO_readPin
 .text.GPIO_setupPortDirection
                0x000007c4       0x88 ./gpio.o
                0x000007c4                GPIO_setupPortDirection
 .text.GPIO_writePort
                0x0000084c       0x88 ./gpio.o
                0x0000084c                GPIO_writePort
 .text.GPIO_readPort
                0x000008d4       0x8a ./gpio.o
                0x000008d4                GPIO_readPort
 .text.TWI_init
                0x0000095e       0x76 ./i2c.o
                0x0000095e                TWI_init
 .text.TWI_start
                0x000009d4       0x20 ./i2c.o
                0x000009d4                TWI_start
 .text.TWI_stop
                0x000009f4       0x16 ./i2c.o
                0x000009f4                TWI_stop
 .text.TWI_write
                0x00000a0a       0x2e ./i2c.o
                0x00000a0a                TWI_write
 .text.TWI_readWithACK
                0x00000a38       0x26 ./i2c.o
                0x00000a38                TWI_readWithACK
 .text.TWI_readWithNACK
                0x00000a5e       0x26 ./i2c.o
                0x00000a5e                TWI_readWithNACK
 .text.TWI_getStatus
                0x00000a84       0x1e ./i2c.o
                0x00000a84                TWI_getStatus
 .text.main     0x00000aa2      0x270 ./main.o
                0x00000aa2                main
 .text.TASK_alertOn
                0x00000d12       0xa4 ./main.o
                0x00000d12                TASK_alertOn
 .text.TASK_alertOff
                0x00000db6       0x36 ./main.o
                0x00000db6                TASK_alertOff
 .text.TASK_doorOpen
                0x00000dec       0x90 ./main.o
                0x00000dec                TASK_doorOpen
 .text.TASK_doorClose
                0x00000e7c       0x60 ./main.o
                0x00000e7c                TASK_doorClose
 .text.TASK_doorStop
                0x00000edc       0x3c ./main.o
                0x00000edc                TASK_doorStop
 .text.TASK_TickTok
                0x00000f18       0x48 ./main.o
                0x00000f18                TASK_TickTok
 .text.__vector_9
                0x00000f60       0x66 ./timer.o
                0x00000f60                __vector_9
 .text.TIMER0_init
                0x00000fc6      0x136 ./timer.o
                0x00000fc6                TIMER0_init
 .text.TIMER0_setCallBack
                0x000010fc       0x24 ./timer.o
                0x000010fc                TIMER0_setCallBack
 .text.TIMER0_deinit
                0x00001120       0x26 ./timer.o
                0x00001120                TIMER0_deinit
 .text.UART_init
                0x00001146      0x11a ./uart.o
                0x00001146                UART_init
 .text.UART_sendByte
                0x00001260       0x2e ./uart.o
                0x00001260                UART_sendByte
 .text.UART_recieveByte
                0x0000128e       0x1e ./uart.o
                0x0000128e                UART_recieveByte
 .text.UART_sendString
                0x000012ac       0x38 ./uart.o
                0x000012ac                UART_sendString
 .text.UART_receiveString
                0x000012e4       0x86 ./uart.o
                0x000012e4                UART_receiveString
 .text.libgcc   0x0000136a       0x44 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x0000136a                __udivmodsi4
 .text.libgcc   0x000013ae        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000013ae        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x000013ae        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x000013ae                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000013ae        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000013ae                exit
                0x000013ae                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000013ae        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000013b2                _etext = .

.data           0x00800060       0x22 load address 0x000013b2
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .data          0x00800060        0x0 ./buzzer.o
 .data          0x00800060        0x0 ./dc_motor.o
 .data          0x00800060        0x0 ./eeprom.o
 .data          0x00800060        0x0 ./gpio.o
 .data          0x00800060        0x0 ./i2c.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 ./timer.o
 .data          0x00800060        0x0 ./uart.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 .data.flag     0x00800060        0x1 ./main.o
                0x00800060                flag
 *(.rodata)
 *(.rodata*)
 .rodata.C.1.1389
                0x00800061        0x7 ./main.o
 .rodata.C.0.1388
                0x00800068        0x3 ./main.o
 .rodata.C.27.1463
                0x0080006b        0xb ./main.o
 .rodata.C.30.1479
                0x00800076        0xb ./main.o
 *(.gnu.linkonce.d*)
                0x00800082                . = ALIGN (0x2)
 *fill*         0x00800081        0x1 00
                0x00800082                _edata = .
                0x00800082                PROVIDE (__data_end, .)

.bss            0x00800082       0x11
                0x00800082                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800082        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .bss           0x00800082        0x0 ./buzzer.o
 .bss           0x00800082        0x0 ./dc_motor.o
 .bss           0x00800082        0x0 ./eeprom.o
 .bss           0x00800082        0x0 ./gpio.o
 .bss           0x00800082        0x0 ./i2c.o
 .bss           0x00800082        0x0 ./main.o
 .bss           0x00800082        0x0 ./timer.o
 .bss           0x00800082        0x0 ./uart.o
 .bss           0x00800082        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x00800082        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800082        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800082        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.User_Choice
                0x00800082        0x1 ./main.o
                0x00800082                User_Choice
 .bss.g_seconds
                0x00800083        0x2 ./main.o
                0x00800083                g_seconds
 .bss.g_callBackPtr_timer0
                0x00800085        0x2 ./timer.o
 .bss.g_ticks   0x00800087        0x2 ./timer.o
                0x00800087                g_ticks
 *(COMMON)
 COMMON         0x00800089        0xa ./main.o
                0x00800089                i
                0x0080008a                IsRecorded
                0x0080008b                keyPressed
                0x0080008c                Decision
                0x0080008d                CONTROL_ECU_Password
                0x00800093                PROVIDE (__bss_end, .)
                0x000013b2                __data_load_start = LOADADDR (.data)
                0x000013d4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800093        0x0
                0x00800093                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800093                PROVIDE (__noinit_end, .)
                0x00800093                _end = .
                0x00800093                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x2160
 *(.stab)
 .stab          0x00000000      0x27c ./buzzer.o
 .stab          0x0000027c      0x210 ./dc_motor.o
                                0x2e8 (size before relaxing)
 .stab          0x0000048c      0x570 ./eeprom.o
                                0x60c (size before relaxing)
 .stab          0x000009fc      0x5e8 ./gpio.o
                                0x870 (size before relaxing)
 .stab          0x00000fe4      0x33c ./i2c.o
                                0x5b8 (size before relaxing)
 .stab          0x00001320      0x7bc ./main.o
                                0xa44 (size before relaxing)
 .stab          0x00001adc      0x300 ./timer.o
                                0x60c (size before relaxing)
 .stab          0x00001ddc      0x384 ./uart.o
                                0x630 (size before relaxing)

.stabstr        0x00000000     0x13ff
 *(.stabstr)
 .stabstr       0x00000000     0x13ff ./buzzer.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(CONTROL_ECU.elf elf32-avr)
LOAD linker stubs
